{
    "state_2": {
        "cond_1": "(Sle 1\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_10": "(Sle (ReadLSB w32 0 temp_c1_2)\n      100000)",
        "cond_11": "(Sle 0\n      (ReadLSB w32 0 coin1_index_2))",
        "cond_12": "(Sle (ReadLSB w32 0 coin1_index_2)\n      1)",
        "cond_13": "(Sle 1\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_14": "(Sle (ReadLSB w32 0 temp_c2_0)\n      100000)",
        "cond_15": "(Sle 0\n      (ReadLSB w32 0 coin2_index_0))",
        "cond_16": "(Sle (ReadLSB w32 0 coin2_index_0)\n      1)",
        "cond_17": "(Sle 1\n      (ReadLSB w32 0 temp_c2_1))",
        "cond_18": "(Sle (ReadLSB w32 0 temp_c2_1)\n      100000)",
        "cond_19": "(Sle 0\n      (ReadLSB w32 0 coin2_index_1))",
        "cond_2": "(Sle (ReadLSB w32 0 temp_c1_0)\n      100000)",
        "cond_20": "(Sle (ReadLSB w32 0 coin2_index_1)\n      1)",
        "cond_21": "(Sle 1\n      (ReadLSB w32 0 temp_c2_2))",
        "cond_22": "(Sle (ReadLSB w32 0 temp_c2_2)\n      100000)",
        "cond_23": "(Sle 0\n      (ReadLSB w32 0 coin2_index_2))",
        "cond_24": "(Sle (ReadLSB w32 0 coin2_index_2)\n      1)",
        "cond_25": "(Slt (ReadLSB w32 0 temp_c1_0)\n      (ReadLSB w32 0 b1_sym))",
        "cond_3": "(Sle 0\n      (ReadLSB w32 0 coin1_index_0))",
        "cond_4": "(Sle (ReadLSB w32 0 coin1_index_0)\n      1)",
        "cond_5": "(Sle 1\n      (ReadLSB w32 0 temp_c1_1))",
        "cond_6": "(Sle (ReadLSB w32 0 temp_c1_1)\n      100000)",
        "cond_7": "(Sle 0\n      (ReadLSB w32 0 coin1_index_1))",
        "cond_8": "(Sle (ReadLSB w32 0 coin1_index_1)\n      1)",
        "cond_9": "(Sle 1\n      (ReadLSB w32 0 temp_c1_2))"
    },
    "state_3": {
        "cond_1": "(Sle 1\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_10": "(Sle (ReadLSB w32 0 temp_c1_2)\n      100000)",
        "cond_11": "(Sle 0\n      (ReadLSB w32 0 coin1_index_2))",
        "cond_12": "(Sle (ReadLSB w32 0 coin1_index_2)\n      1)",
        "cond_13": "(Sle 1\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_14": "(Sle (ReadLSB w32 0 temp_c2_0)\n      100000)",
        "cond_15": "(Sle 0\n      (ReadLSB w32 0 coin2_index_0))",
        "cond_16": "(Sle (ReadLSB w32 0 coin2_index_0)\n      1)",
        "cond_17": "(Sle 1\n      (ReadLSB w32 0 temp_c2_1))",
        "cond_18": "(Sle (ReadLSB w32 0 temp_c2_1)\n      100000)",
        "cond_19": "(Sle 0\n      (ReadLSB w32 0 coin2_index_1))",
        "cond_2": "(Sle (ReadLSB w32 0 temp_c1_0)\n      100000)",
        "cond_20": "(Sle (ReadLSB w32 0 coin2_index_1)\n      1)",
        "cond_21": "(Sle 1\n      (ReadLSB w32 0 temp_c2_2))",
        "cond_22": "(Sle (ReadLSB w32 0 temp_c2_2)\n      100000)",
        "cond_23": "(Sle 0\n      (ReadLSB w32 0 coin2_index_2))",
        "cond_24": "(Sle (ReadLSB w32 0 coin2_index_2)\n      1)",
        "cond_25": "(Eq false\n     (Slt (ReadLSB w32 0 temp_c1_0)\n          (ReadLSB w32 0 b1_sym)))",
        "cond_3": "(Sle 0\n      (ReadLSB w32 0 coin1_index_0))",
        "cond_4": "(Sle (ReadLSB w32 0 coin1_index_0)\n      1)",
        "cond_5": "(Sle 1\n      (ReadLSB w32 0 temp_c1_1))",
        "cond_6": "(Sle (ReadLSB w32 0 temp_c1_1)\n      100000)",
        "cond_7": "(Sle 0\n      (ReadLSB w32 0 coin1_index_1))",
        "cond_8": "(Sle (ReadLSB w32 0 coin1_index_1)\n      1)",
        "cond_9": "(Sle 1\n      (ReadLSB w32 0 temp_c1_2))"
    },
    "state_4": {
        "cond_1": "(Sle 1\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_10": "(Sle (ReadLSB w32 0 temp_c1_2)\n      100000)",
        "cond_11": "(Sle 0\n      (ReadLSB w32 0 coin1_index_2))",
        "cond_12": "(Sle (ReadLSB w32 0 coin1_index_2)\n      1)",
        "cond_13": "(Sle 1\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_14": "(Sle (ReadLSB w32 0 temp_c2_0)\n      100000)",
        "cond_15": "(Sle 0\n      (ReadLSB w32 0 coin2_index_0))",
        "cond_16": "(Sle (ReadLSB w32 0 coin2_index_0)\n      1)",
        "cond_17": "(Sle 1\n      (ReadLSB w32 0 temp_c2_1))",
        "cond_18": "(Sle (ReadLSB w32 0 temp_c2_1)\n      100000)",
        "cond_19": "(Sle 0\n      (ReadLSB w32 0 coin2_index_1))",
        "cond_2": "(Sle (ReadLSB w32 0 temp_c1_0)\n      100000)",
        "cond_20": "(Sle (ReadLSB w32 0 coin2_index_1)\n      1)",
        "cond_21": "(Sle 1\n      (ReadLSB w32 0 temp_c2_2))",
        "cond_22": "(Sle (ReadLSB w32 0 temp_c2_2)\n      100000)",
        "cond_23": "(Sle 0\n      (ReadLSB w32 0 coin2_index_2))",
        "cond_24": "(Sle (ReadLSB w32 0 coin2_index_2)\n      1)",
        "cond_25": "(Eq false\n     (Slt (ReadLSB w32 0 temp_c1_0)\n          (ReadLSB w32 0 b1_sym)))",
        "cond_26": "(Slt (ReadLSB w32 0 b1_sym)\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_3": "(Sle 0\n      (ReadLSB w32 0 coin1_index_0))",
        "cond_4": "(Sle (ReadLSB w32 0 coin1_index_0)\n      1)",
        "cond_5": "(Sle 1\n      (ReadLSB w32 0 temp_c1_1))",
        "cond_6": "(Sle (ReadLSB w32 0 temp_c1_1)\n      100000)",
        "cond_7": "(Sle 0\n      (ReadLSB w32 0 coin1_index_1))",
        "cond_8": "(Sle (ReadLSB w32 0 coin1_index_1)\n      1)",
        "cond_9": "(Sle 1\n      (ReadLSB w32 0 temp_c1_2))"
    },
    "state_5": {
        "cond_1": "(Sle 1\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_10": "(Sle (ReadLSB w32 0 temp_c1_2)\n      100000)",
        "cond_11": "(Sle 0\n      (ReadLSB w32 0 coin1_index_2))",
        "cond_12": "(Sle (ReadLSB w32 0 coin1_index_2)\n      1)",
        "cond_13": "(Sle 1\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_14": "(Sle (ReadLSB w32 0 temp_c2_0)\n      100000)",
        "cond_15": "(Sle 0\n      (ReadLSB w32 0 coin2_index_0))",
        "cond_16": "(Sle (ReadLSB w32 0 coin2_index_0)\n      1)",
        "cond_17": "(Sle 1\n      (ReadLSB w32 0 temp_c2_1))",
        "cond_18": "(Sle (ReadLSB w32 0 temp_c2_1)\n      100000)",
        "cond_19": "(Sle 0\n      (ReadLSB w32 0 coin2_index_1))",
        "cond_2": "(Sle (ReadLSB w32 0 temp_c1_0)\n      100000)",
        "cond_20": "(Sle (ReadLSB w32 0 coin2_index_1)\n      1)",
        "cond_21": "(Sle 1\n      (ReadLSB w32 0 temp_c2_2))",
        "cond_22": "(Sle (ReadLSB w32 0 temp_c2_2)\n      100000)",
        "cond_23": "(Sle 0\n      (ReadLSB w32 0 coin2_index_2))",
        "cond_24": "(Sle (ReadLSB w32 0 coin2_index_2)\n      1)",
        "cond_25": "(Eq false\n     (Slt (ReadLSB w32 0 temp_c1_0)\n          (ReadLSB w32 0 b1_sym)))",
        "cond_26": "(Eq false\n     (Slt (ReadLSB w32 0 b1_sym)\n          (ReadLSB w32 0 temp_c1_0)))",
        "cond_3": "(Sle 0\n      (ReadLSB w32 0 coin1_index_0))",
        "cond_4": "(Sle (ReadLSB w32 0 coin1_index_0)\n      1)",
        "cond_5": "(Sle 1\n      (ReadLSB w32 0 temp_c1_1))",
        "cond_6": "(Sle (ReadLSB w32 0 temp_c1_1)\n      100000)",
        "cond_7": "(Sle 0\n      (ReadLSB w32 0 coin1_index_1))",
        "cond_8": "(Sle (ReadLSB w32 0 coin1_index_1)\n      1)",
        "cond_9": "(Sle 1\n      (ReadLSB w32 0 temp_c1_2))"
    },
    "state_6": {
        "cond_1": "(Sle 1\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_10": "(Sle (ReadLSB w32 0 temp_c1_2)\n      100000)",
        "cond_11": "(Sle 0\n      (ReadLSB w32 0 coin1_index_2))",
        "cond_12": "(Sle (ReadLSB w32 0 coin1_index_2)\n      1)",
        "cond_13": "(Sle 1\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_14": "(Sle (ReadLSB w32 0 temp_c2_0)\n      100000)",
        "cond_15": "(Sle 0\n      (ReadLSB w32 0 coin2_index_0))",
        "cond_16": "(Sle (ReadLSB w32 0 coin2_index_0)\n      1)",
        "cond_17": "(Sle 1\n      (ReadLSB w32 0 temp_c2_1))",
        "cond_18": "(Sle (ReadLSB w32 0 temp_c2_1)\n      100000)",
        "cond_19": "(Sle 0\n      (ReadLSB w32 0 coin2_index_1))",
        "cond_2": "(Sle (ReadLSB w32 0 temp_c1_0)\n      100000)",
        "cond_20": "(Sle (ReadLSB w32 0 coin2_index_1)\n      1)",
        "cond_21": "(Sle 1\n      (ReadLSB w32 0 temp_c2_2))",
        "cond_22": "(Sle (ReadLSB w32 0 temp_c2_2)\n      100000)",
        "cond_23": "(Sle 0\n      (ReadLSB w32 0 coin2_index_2))",
        "cond_24": "(Sle (ReadLSB w32 0 coin2_index_2)\n      1)",
        "cond_25": "(Eq false\n     (Slt (ReadLSB w32 0 temp_c1_0)\n          (ReadLSB w32 0 b1_sym)))",
        "cond_26": "(Slt (ReadLSB w32 0 b1_sym)\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_27": "(Slt (ReadLSB w32 0 temp_c2_0)\n      (ReadLSB w32 0 b2_sym))",
        "cond_3": "(Sle 0\n      (ReadLSB w32 0 coin1_index_0))",
        "cond_4": "(Sle (ReadLSB w32 0 coin1_index_0)\n      1)",
        "cond_5": "(Sle 1\n      (ReadLSB w32 0 temp_c1_1))",
        "cond_6": "(Sle (ReadLSB w32 0 temp_c1_1)\n      100000)",
        "cond_7": "(Sle 0\n      (ReadLSB w32 0 coin1_index_1))",
        "cond_8": "(Sle (ReadLSB w32 0 coin1_index_1)\n      1)",
        "cond_9": "(Sle 1\n      (ReadLSB w32 0 temp_c1_2))"
    },
    "state_7": {
        "cond_1": "(Sle 1\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_10": "(Sle (ReadLSB w32 0 temp_c1_2)\n      100000)",
        "cond_11": "(Sle 0\n      (ReadLSB w32 0 coin1_index_2))",
        "cond_12": "(Sle (ReadLSB w32 0 coin1_index_2)\n      1)",
        "cond_13": "(Sle 1\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_14": "(Sle (ReadLSB w32 0 temp_c2_0)\n      100000)",
        "cond_15": "(Sle 0\n      (ReadLSB w32 0 coin2_index_0))",
        "cond_16": "(Sle (ReadLSB w32 0 coin2_index_0)\n      1)",
        "cond_17": "(Sle 1\n      (ReadLSB w32 0 temp_c2_1))",
        "cond_18": "(Sle (ReadLSB w32 0 temp_c2_1)\n      100000)",
        "cond_19": "(Sle 0\n      (ReadLSB w32 0 coin2_index_1))",
        "cond_2": "(Sle (ReadLSB w32 0 temp_c1_0)\n      100000)",
        "cond_20": "(Sle (ReadLSB w32 0 coin2_index_1)\n      1)",
        "cond_21": "(Sle 1\n      (ReadLSB w32 0 temp_c2_2))",
        "cond_22": "(Sle (ReadLSB w32 0 temp_c2_2)\n      100000)",
        "cond_23": "(Sle 0\n      (ReadLSB w32 0 coin2_index_2))",
        "cond_24": "(Sle (ReadLSB w32 0 coin2_index_2)\n      1)",
        "cond_25": "(Eq false\n     (Slt (ReadLSB w32 0 temp_c1_0)\n          (ReadLSB w32 0 b1_sym)))",
        "cond_26": "(Slt (ReadLSB w32 0 b1_sym)\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_27": "(Eq false\n     (Slt (ReadLSB w32 0 temp_c2_0)\n          (ReadLSB w32 0 b2_sym)))",
        "cond_3": "(Sle 0\n      (ReadLSB w32 0 coin1_index_0))",
        "cond_4": "(Sle (ReadLSB w32 0 coin1_index_0)\n      1)",
        "cond_5": "(Sle 1\n      (ReadLSB w32 0 temp_c1_1))",
        "cond_6": "(Sle (ReadLSB w32 0 temp_c1_1)\n      100000)",
        "cond_7": "(Sle 0\n      (ReadLSB w32 0 coin1_index_1))",
        "cond_8": "(Sle (ReadLSB w32 0 coin1_index_1)\n      1)",
        "cond_9": "(Sle 1\n      (ReadLSB w32 0 temp_c1_2))"
    },
    "state_8": {
        "cond_1": "(Sle 1\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_10": "(Sle (ReadLSB w32 0 temp_c1_2)\n      100000)",
        "cond_11": "(Sle 0\n      (ReadLSB w32 0 coin1_index_2))",
        "cond_12": "(Sle (ReadLSB w32 0 coin1_index_2)\n      1)",
        "cond_13": "(Sle 1\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_14": "(Sle (ReadLSB w32 0 temp_c2_0)\n      100000)",
        "cond_15": "(Sle 0\n      (ReadLSB w32 0 coin2_index_0))",
        "cond_16": "(Sle (ReadLSB w32 0 coin2_index_0)\n      1)",
        "cond_17": "(Sle 1\n      (ReadLSB w32 0 temp_c2_1))",
        "cond_18": "(Sle (ReadLSB w32 0 temp_c2_1)\n      100000)",
        "cond_19": "(Sle 0\n      (ReadLSB w32 0 coin2_index_1))",
        "cond_2": "(Sle (ReadLSB w32 0 temp_c1_0)\n      100000)",
        "cond_20": "(Sle (ReadLSB w32 0 coin2_index_1)\n      1)",
        "cond_21": "(Sle 1\n      (ReadLSB w32 0 temp_c2_2))",
        "cond_22": "(Sle (ReadLSB w32 0 temp_c2_2)\n      100000)",
        "cond_23": "(Sle 0\n      (ReadLSB w32 0 coin2_index_2))",
        "cond_24": "(Sle (ReadLSB w32 0 coin2_index_2)\n      1)",
        "cond_25": "(Slt (ReadLSB w32 0 temp_c1_0)\n      (ReadLSB w32 0 b1_sym))",
        "cond_26": "(Slt (ReadLSB w32 0 b2_sym)\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_27": "(Slt (Add w32 (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum2_sym)\n                                          (ZExt w32 (Sle N0:(ReadLSB w32 0 b2_sym)\n                                                         (ReadLSB w32 0 temp_c2_0))))\n                                 (ZExt w32 (Sle N0\n                                                (ReadLSB w32 0 temp_c2_1))))\n                        (ZExt w32 (Sle N0\n                                       (ReadLSB w32 0 temp_c2_2))))\n               (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum1_sym)\n                                          (ZExt w32 (Sle N1:(ReadLSB w32 0 b1_sym)\n                                                         (ReadLSB w32 0 temp_c1_0))))\n                                 (ZExt w32 (Sle N1\n                                                (ReadLSB w32 0 temp_c1_1))))\n                        (ZExt w32 (Sle N1\n                                       (ReadLSB w32 0 temp_c1_2)))))\n      6)",
        "cond_3": "(Sle 0\n      (ReadLSB w32 0 coin1_index_0))",
        "cond_4": "(Sle (ReadLSB w32 0 coin1_index_0)\n      1)",
        "cond_5": "(Sle 1\n      (ReadLSB w32 0 temp_c1_1))",
        "cond_6": "(Sle (ReadLSB w32 0 temp_c1_1)\n      100000)",
        "cond_7": "(Sle 0\n      (ReadLSB w32 0 coin1_index_1))",
        "cond_8": "(Sle (ReadLSB w32 0 coin1_index_1)\n      1)",
        "cond_9": "(Sle 1\n      (ReadLSB w32 0 temp_c1_2))"
    },
    "state_9": {
        "cond_1": "(Sle 1\n      (ReadLSB w32 0 temp_c1_0))",
        "cond_10": "(Sle (ReadLSB w32 0 temp_c1_2)\n      100000)",
        "cond_11": "(Sle 0\n      (ReadLSB w32 0 coin1_index_2))",
        "cond_12": "(Sle (ReadLSB w32 0 coin1_index_2)\n      1)",
        "cond_13": "(Sle 1\n      (ReadLSB w32 0 temp_c2_0))",
        "cond_14": "(Sle (ReadLSB w32 0 temp_c2_0)\n      100000)",
        "cond_15": "(Sle 0\n      (ReadLSB w32 0 coin2_index_0))",
        "cond_16": "(Sle (ReadLSB w32 0 coin2_index_0)\n      1)",
        "cond_17": "(Sle 1\n      (ReadLSB w32 0 temp_c2_1))",
        "cond_18": "(Sle (ReadLSB w32 0 temp_c2_1)\n      100000)",
        "cond_19": "(Sle 0\n      (ReadLSB w32 0 coin2_index_1))",
        "cond_2": "(Sle (ReadLSB w32 0 temp_c1_0)\n      100000)",
        "cond_20": "(Sle (ReadLSB w32 0 coin2_index_1)\n      1)",
        "cond_21": "(Sle 1\n      (ReadLSB w32 0 temp_c2_2))",
        "cond_22": "(Sle (ReadLSB w32 0 temp_c2_2)\n      100000)",
        "cond_23": "(Sle 0\n      (ReadLSB w32 0 coin2_index_2))",
        "cond_24": "(Sle (ReadLSB w32 0 coin2_index_2)\n      1)",
        "cond_25": "(Slt (ReadLSB w32 0 temp_c1_0)\n      (ReadLSB w32 0 b1_sym))",
        "cond_26": "(Eq false\n     (And (Slt N0:(ReadLSB w32 0 b2_sym)\n               N1:(ReadLSB w32 0 temp_c2_0))\n          (Slt (Add w32 (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum2_sym)\n                                                   (ZExt w32 (Sle N0 N1)))\n                                          (ZExt w32 (Sle N0\n                                                         (ReadLSB w32 0 temp_c2_1))))\n                                 (ZExt w32 (Sle N0\n                                                (ReadLSB w32 0 temp_c2_2))))\n                        (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum1_sym)\n                                                   (ZExt w32 (Sle N2:(ReadLSB w32 0 b1_sym)\n                                                                  (ReadLSB w32 0 temp_c1_0))))\n                                          (ZExt w32 (Sle N2\n                                                         (ReadLSB w32 0 temp_c1_1))))\n                                 (ZExt w32 (Sle N2\n                                                (ReadLSB w32 0 temp_c1_2)))))\n               6)))",
        "cond_3": "(Sle 0\n      (ReadLSB w32 0 coin1_index_0))",
        "cond_4": "(Sle (ReadLSB w32 0 coin1_index_0)\n      1)",
        "cond_5": "(Sle 1\n      (ReadLSB w32 0 temp_c1_1))",
        "cond_6": "(Sle (ReadLSB w32 0 temp_c1_1)\n      100000)",
        "cond_7": "(Sle 0\n      (ReadLSB w32 0 coin1_index_1))",
        "cond_8": "(Sle (ReadLSB w32 0 coin1_index_1)\n      1)",
        "cond_9": "(Sle 1\n      (ReadLSB w32 0 temp_c1_2))"
    }
}
