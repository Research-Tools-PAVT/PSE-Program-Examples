{
    "Path 1": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "a1733765-7dca-4b89-92bf-0fa96e368684"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "28de4ef3-67be-4ee2-8135-76d29bc56c16"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "13",
                "uid": "becf309a-1684-4d87-9b5b-fd878273e63c"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        }
    ],
    "Path 2": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "a1733765-7dca-4b89-92bf-0fa96e368684"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "91f25d54-ba30-4107-9da0-3debf9dd4136"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "5029718e-8b12-48ce-a83e-5f80f8398806"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "19",
                "uid": "02d33982-4fe5-4c7c-a41f-b07ce2502b32"
            },
            "predicate": "(Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "1",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 3": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "a1733765-7dca-4b89-92bf-0fa96e368684"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "28de4ef3-67be-4ee2-8135-76d29bc56c16"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "12",
                "uid": "5a90a8a2-59d0-4454-94ff-b63a6319dd9e"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "24",
                "uid": "601bc213-db59-4adf-a036-0525f19307e3"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 4": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "a1733765-7dca-4b89-92bf-0fa96e368684"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "28de4ef3-67be-4ee2-8135-76d29bc56c16"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "12",
                "uid": "5a90a8a2-59d0-4454-94ff-b63a6319dd9e"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "25",
                "uid": "dc3a3dc0-6623-4411-b1cf-a88e6b3dda41"
            },
            "predicate": "(Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "1",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 5": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "5a68f4fa-711c-4c9f-af09-28758dd4d033"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "4715e418-a847-497a-a969-d2b62d46e0ca"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "bee0bd75-738e-44f7-bed6-5d9ba4a00c3b"
            },
            "predicate": "(Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "left": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 6": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "5a68f4fa-711c-4c9f-af09-28758dd4d033"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "4715e418-a847-497a-a969-d2b62d46e0ca"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "9",
                "uid": "1c73e467-3ae5-432f-b9c4-8d9c254d1fae"
            },
            "predicate": "(Eq false (Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "left": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ],
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 7": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "a1733765-7dca-4b89-92bf-0fa96e368684"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "91f25d54-ba30-4107-9da0-3debf9dd4136"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "11",
                "uid": "0434bc9b-3265-42c3-9094-494d5d812a9d"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "14",
                "uid": "8f081ab9-6572-44ab-a2c1-0b61d7301936"
            },
            "predicate": "(Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "left": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 8": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "a1733765-7dca-4b89-92bf-0fa96e368684"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "91f25d54-ba30-4107-9da0-3debf9dd4136"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "11",
                "uid": "0434bc9b-3265-42c3-9094-494d5d812a9d"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "15",
                "uid": "81cabfb1-194c-41cd-b96d-17d0c73f1f09"
            },
            "predicate": "(Eq false (Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "left": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ],
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 9": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "5a68f4fa-711c-4c9f-af09-28758dd4d033"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "60a134c7-a656-472c-9bb8-a0a0f4520050"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "16",
                "uid": "a2f06297-4d2e-4acc-83e3-90152a970275"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "20",
                "uid": "78648baf-7a76-4331-ba06-0de096ffe659"
            },
            "predicate": "(Eq 3 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "3",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 10": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "5a68f4fa-711c-4c9f-af09-28758dd4d033"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "60a134c7-a656-472c-9bb8-a0a0f4520050"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "16",
                "uid": "a2f06297-4d2e-4acc-83e3-90152a970275"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "21",
                "uid": "07afeaf8-122e-4e2d-b83f-245c6805f86b"
            },
            "predicate": "(Eq false (Eq 3 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "3",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 11": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "5a68f4fa-711c-4c9f-af09-28758dd4d033"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "60a134c7-a656-472c-9bb8-a0a0f4520050"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "17",
                "uid": "737dd278-3e35-4d15-bac8-c53ac98baa90"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "22",
                "uid": "d4aa551f-1470-4399-810d-2182c355e90a"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 12": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "5a68f4fa-711c-4c9f-af09-28758dd4d033"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "60a134c7-a656-472c-9bb8-a0a0f4520050"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "17",
                "uid": "737dd278-3e35-4d15-bac8-c53ac98baa90"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "23",
                "uid": "0a43dee5-fb48-40f9-9106-097431f0fbd9"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 13": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "a1733765-7dca-4b89-92bf-0fa96e368684"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "91f25d54-ba30-4107-9da0-3debf9dd4136"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "5029718e-8b12-48ce-a83e-5f80f8398806"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "18",
                "uid": "d4cc0808-8206-4813-ab31-33360f57ce82"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "26",
                "uid": "818cca46-4567-4ddf-9504-06cb78920a86"
            },
            "predicate": "(Eq 3 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "3",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 14": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "a1733765-7dca-4b89-92bf-0fa96e368684"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "91f25d54-ba30-4107-9da0-3debf9dd4136"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ],
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "5029718e-8b12-48ce-a83e-5f80f8398806"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "18",
                "uid": "d4cc0808-8206-4813-ab31-33360f57ce82"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "27",
                "uid": "846ea07f-5daa-481a-b6a3-0c4c84c8a4fe"
            },
            "predicate": "(Eq false (Eq 3 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "3",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ]
}