{
    "1": [
        {
            "treeNode": {
                "nodeId": "0",
                "emphemeralId": "0",
                "uid": "25fe26aa-16c9-47aa-ad6f-65f7418ca1d3"
            },
            "nodeTrueQuery": [
                "(Eq false (And (And (And (Eq (ReadLSB w32 0 C_1) (Add w32 (Mul w32 N0:(ReadLSB w32 0 B_1) N1:(ReadLSB w32 0 A)) (Mul w32 N2:(ReadLSB w32 0 B_3) N3:(ReadLSB w32 0 A_1)))) (Eq (ReadLSB w32 0 C) (Add w32 (Mul w32 N4:(ReadLSB w32 0 B) N1) (Mul w32 N5:(ReadLSB w32 0 B_2) N3)))) (Eq (ReadLSB w32 0 C_2) (Add w32 (Mul w32 N4 N6:(ReadLSB w32 0 A_2)) (Mul w32 N5 N7:(ReadLSB w32 0 A_3))))) (Eq (ReadLSB w32 0 C_3) (Add w32 (Mul w32 N0 N6) (Mul w32 N2 N7)))))",
                "(Sle 0 (ReadLSB w32 0 r_sym))",
                "(Sle (ReadLSB w32 0 r_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 r_sym_1))",
                "(Sle (ReadLSB w32 0 r_sym_1) 1)",
                "(Eq 1 (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0:(Add w32 (Mul w32 N1:(ReadLSB w32 0 r_sym_1) (ReadLSB w32 0 B_3)) (Mul w32 N2:(ReadLSB w32 0 r_sym) (ReadLSB w32 0 B_2))) (ReadLSB w32 0 A_3)) (Mul w32 N3:(Add w32 (Mul w32 N1 (ReadLSB w32 0 B_1)) (Mul w32 N2 (ReadLSB w32 0 B))) (ReadLSB w32 0 A_2))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_3)) (Mul w32 N2 (ReadLSB w32 0 C_2))))) (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0 (ReadLSB w32 0 A_1)) (Mul w32 N3 (ReadLSB w32 0 A))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_1)) (Mul w32 N2 (ReadLSB w32 0 C))))) 1 0) 0))"
            ],
            "nodeFalseQuery": [
                "(Eq false (And (And (And (Eq (ReadLSB w32 0 C_1) (Add w32 (Mul w32 N0:(ReadLSB w32 0 B_1) N1:(ReadLSB w32 0 A)) (Mul w32 N2:(ReadLSB w32 0 B_3) N3:(ReadLSB w32 0 A_1)))) (Eq (ReadLSB w32 0 C) (Add w32 (Mul w32 N4:(ReadLSB w32 0 B) N1) (Mul w32 N5:(ReadLSB w32 0 B_2) N3)))) (Eq (ReadLSB w32 0 C_2) (Add w32 (Mul w32 N4 N6:(ReadLSB w32 0 A_2)) (Mul w32 N5 N7:(ReadLSB w32 0 A_3))))) (Eq (ReadLSB w32 0 C_3) (Add w32 (Mul w32 N0 N6) (Mul w32 N2 N7)))))",
                "(Sle 0 (ReadLSB w32 0 r_sym))",
                "(Sle (ReadLSB w32 0 r_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 r_sym_1))",
                "(Sle (ReadLSB w32 0 r_sym_1) 1)",
                "(Eq false (Eq 1 (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0:(Add w32 (Mul w32 N1:(ReadLSB w32 0 r_sym_1) (ReadLSB w32 0 B_3)) (Mul w32 N2:(ReadLSB w32 0 r_sym) (ReadLSB w32 0 B_2))) (ReadLSB w32 0 A_3)) (Mul w32 N3:(Add w32 (Mul w32 N1 (ReadLSB w32 0 B_1)) (Mul w32 N2 (ReadLSB w32 0 B))) (ReadLSB w32 0 A_2))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_3)) (Mul w32 N2 (ReadLSB w32 0 C_2))))) (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0 (ReadLSB w32 0 A_1)) (Mul w32 N3 (ReadLSB w32 0 A))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_1)) (Mul w32 N2 (ReadLSB w32 0 C))))) 1 0) 0)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "2",
                "emphemeralId": "2",
                "uid": "4a44bafd-02e6-4176-b8cf-c5895602b9a6"
            },
            "predicate": "(Eq 1 (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0:(Add w32 (Mul w32 N1:(ReadLSB w32 0 r_sym_1) (ReadLSB w32 0 B_3)) (Mul w32 N2:(ReadLSB w32 0 r_sym) (ReadLSB w32 0 B_2))) (ReadLSB w32 0 A_3)) (Mul w32 N3:(Add w32 (Mul w32 N1 (ReadLSB w32 0 B_1)) (Mul w32 N2 (ReadLSB w32 0 B))) (ReadLSB w32 0 A_2))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_3)) (Mul w32 N2 (ReadLSB w32 0 C_2))))) (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0 (ReadLSB w32 0 A_1)) (Mul w32 N3 (ReadLSB w32 0 A))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_1)) (Mul w32 N2 (ReadLSB w32 0 C))))) 1 0) 0))",
            "ephemeralId": 2,
            "removed": false,
            "marked_success": true,
            "predicateId": "cond_true_1",
            "variables": [
                "N0:",
                "N1:",
                "r_sym_1",
                "B_3",
                "N2:",
                "r_sym",
                "B_2",
                "A_3",
                "N3:",
                "N1",
                "B_1",
                "N2",
                "B",
                "A_2",
                "N1",
                "C_3",
                "N2",
                "C_2",
                "N0",
                "A_1",
                "N3",
                "A",
                "N1",
                "C_1",
                "N2",
                "C"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "2": [
        {
            "treeNode": {
                "nodeId": "0",
                "emphemeralId": "0",
                "uid": "25fe26aa-16c9-47aa-ad6f-65f7418ca1d3"
            },
            "nodeTrueQuery": [
                "(Eq false (And (And (And (Eq (ReadLSB w32 0 C_1) (Add w32 (Mul w32 N0:(ReadLSB w32 0 B_1) N1:(ReadLSB w32 0 A)) (Mul w32 N2:(ReadLSB w32 0 B_3) N3:(ReadLSB w32 0 A_1)))) (Eq (ReadLSB w32 0 C) (Add w32 (Mul w32 N4:(ReadLSB w32 0 B) N1) (Mul w32 N5:(ReadLSB w32 0 B_2) N3)))) (Eq (ReadLSB w32 0 C_2) (Add w32 (Mul w32 N4 N6:(ReadLSB w32 0 A_2)) (Mul w32 N5 N7:(ReadLSB w32 0 A_3))))) (Eq (ReadLSB w32 0 C_3) (Add w32 (Mul w32 N0 N6) (Mul w32 N2 N7)))))",
                "(Sle 0 (ReadLSB w32 0 r_sym))",
                "(Sle (ReadLSB w32 0 r_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 r_sym_1))",
                "(Sle (ReadLSB w32 0 r_sym_1) 1)",
                "(Eq 1 (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0:(Add w32 (Mul w32 N1:(ReadLSB w32 0 r_sym_1) (ReadLSB w32 0 B_3)) (Mul w32 N2:(ReadLSB w32 0 r_sym) (ReadLSB w32 0 B_2))) (ReadLSB w32 0 A_3)) (Mul w32 N3:(Add w32 (Mul w32 N1 (ReadLSB w32 0 B_1)) (Mul w32 N2 (ReadLSB w32 0 B))) (ReadLSB w32 0 A_2))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_3)) (Mul w32 N2 (ReadLSB w32 0 C_2))))) (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0 (ReadLSB w32 0 A_1)) (Mul w32 N3 (ReadLSB w32 0 A))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_1)) (Mul w32 N2 (ReadLSB w32 0 C))))) 1 0) 0))"
            ],
            "nodeFalseQuery": [
                "(Eq false (And (And (And (Eq (ReadLSB w32 0 C_1) (Add w32 (Mul w32 N0:(ReadLSB w32 0 B_1) N1:(ReadLSB w32 0 A)) (Mul w32 N2:(ReadLSB w32 0 B_3) N3:(ReadLSB w32 0 A_1)))) (Eq (ReadLSB w32 0 C) (Add w32 (Mul w32 N4:(ReadLSB w32 0 B) N1) (Mul w32 N5:(ReadLSB w32 0 B_2) N3)))) (Eq (ReadLSB w32 0 C_2) (Add w32 (Mul w32 N4 N6:(ReadLSB w32 0 A_2)) (Mul w32 N5 N7:(ReadLSB w32 0 A_3))))) (Eq (ReadLSB w32 0 C_3) (Add w32 (Mul w32 N0 N6) (Mul w32 N2 N7)))))",
                "(Sle 0 (ReadLSB w32 0 r_sym))",
                "(Sle (ReadLSB w32 0 r_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 r_sym_1))",
                "(Sle (ReadLSB w32 0 r_sym_1) 1)",
                "(Eq false (Eq 1 (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0:(Add w32 (Mul w32 N1:(ReadLSB w32 0 r_sym_1) (ReadLSB w32 0 B_3)) (Mul w32 N2:(ReadLSB w32 0 r_sym) (ReadLSB w32 0 B_2))) (ReadLSB w32 0 A_3)) (Mul w32 N3:(Add w32 (Mul w32 N1 (ReadLSB w32 0 B_1)) (Mul w32 N2 (ReadLSB w32 0 B))) (ReadLSB w32 0 A_2))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_3)) (Mul w32 N2 (ReadLSB w32 0 C_2))))) (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0 (ReadLSB w32 0 A_1)) (Mul w32 N3 (ReadLSB w32 0 A))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_1)) (Mul w32 N2 (ReadLSB w32 0 C))))) 1 0) 0)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "emphemeralId": "3",
                "uid": "6a9813cf-05a6-47c8-a36f-10ea9edcec17"
            },
            "predicate": "(Eq false (Eq 1 (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0:(Add w32 (Mul w32 N1:(ReadLSB w32 0 r_sym_1) (ReadLSB w32 0 B_3)) (Mul w32 N2:(ReadLSB w32 0 r_sym) (ReadLSB w32 0 B_2))) (ReadLSB w32 0 A_3)) (Mul w32 N3:(Add w32 (Mul w32 N1 (ReadLSB w32 0 B_1)) (Mul w32 N2 (ReadLSB w32 0 B))) (ReadLSB w32 0 A_2))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_3)) (Mul w32 N2 (ReadLSB w32 0 C_2))))) (Select w32 (Eq 0 (Sub w32 (Add w32 (Mul w32 N0 (ReadLSB w32 0 A_1)) (Mul w32 N3 (ReadLSB w32 0 A))) (Add w32 (Mul w32 N1 (ReadLSB w32 0 C_1)) (Mul w32 N2 (ReadLSB w32 0 C))))) 1 0) 0)))",
            "ephemeralId": 3,
            "removed": false,
            "predicateId": "cond_false_1",
            "variables": [
                "N0:",
                "N1:",
                "r_sym_1",
                "B_3",
                "N2:",
                "r_sym",
                "B_2",
                "A_3",
                "N3:",
                "N1",
                "B_1",
                "N2",
                "B",
                "A_2",
                "N1",
                "C_3",
                "N2",
                "C_2",
                "N0",
                "A_1",
                "N3",
                "A",
                "N1",
                "C_1",
                "N2",
                "C"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ]
}