{
    "symbolic_execution_tree": {
        "0": {
            "Branch Predicate": "(Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym0) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym2)))))))",
            "Current State Id": 1,
            "False Generate ID": 3,
            "False KLEE Id": 2,
            "Fork": "True",
            "Negate Predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym0) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym2))))))))",
            "True Generate ID": 2,
            "True KLEE Id": 1,
            "falseQuery": [
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym0) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym2))))))))"
            ],
            "isLeaf": "False",
            "state_id": 0,
            "trueQuery": [
                "(Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym0) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym2)))))))"
            ]
        },
        "2": {
            "Branch Predicate": "(Eq true (ReadLSB w32 0 leaf_sym))",
            "Fork": "True",
            "Negate Predicate": "(Eq true (ReadLSB w32 0 leaf_sym))",
            "falseQuery": [],
            "isLeaf": "True",
            "state_id": 2,
            "trueQuery": [],
            "wasQueued": "True"
        },
        "3": {
            "Branch Predicate": "(Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym1) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym1)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym3)))))))",
            "Current State Id": 2,
            "False Generate ID": 5,
            "False KLEE Id": 3,
            "Fork": "True",
            "Negate Predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym1) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym1)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym3))))))))",
            "True Generate ID": 4,
            "True KLEE Id": 2,
            "falseQuery": [
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym0) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym2))))))))",
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym1) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym1)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym3))))))))"
            ],
            "isLeaf": "False",
            "state_id": 3,
            "trueQuery": [
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym0) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym2))))))))",
                "(Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym1) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym1)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym3)))))))"
            ]
        },
        "4": {
            "Branch Predicate": "(Eq true (ReadLSB w32 0 leaf_sym))",
            "Fork": "True",
            "Negate Predicate": "(Eq true (ReadLSB w32 0 leaf_sym))",
            "falseQuery": [],
            "isLeaf": "True",
            "state_id": 4,
            "trueQuery": [],
            "wasQueued": "True"
        },
        "5": {
            "Branch Predicate": "(Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym2) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym2) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym3) (ReadLSB w32 0 B_sym2)))))))",
            "Current State Id": 3,
            "False Generate ID": 7,
            "False KLEE Id": 4,
            "Fork": "True",
            "Negate Predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym2) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym2) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym3) (ReadLSB w32 0 B_sym2))))))))",
            "True Generate ID": 6,
            "True KLEE Id": 3,
            "falseQuery": [
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym0) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym2))))))))",
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym1) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym1)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym3))))))))",
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym2) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym2) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym3) (ReadLSB w32 0 B_sym2))))))))"
            ],
            "isLeaf": "False",
            "state_id": 5,
            "trueQuery": [
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym0) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym2))))))))",
                "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym1) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0) (ReadLSB w32 0 B_sym1)) (Mul w32 (ReadLSB w32 0 A_sym1) (ReadLSB w32 0 B_sym3))))))))",
                "(Extract 0 (ZExt w8 (Eq false (Eq (ReadLSB w32 0 C_sym2) (Add w32 (Mul w32 (ReadLSB w32 0 A_sym2) (ReadLSB w32 0 B_sym0)) (Mul w32 (ReadLSB w32 0 A_sym3) (ReadLSB w32 0 B_sym2)))))))"
            ]
        },
        "6": {
            "Branch Predicate": "(Eq true (ReadLSB w32 0 leaf_sym))",
            "Fork": "True",
            "Negate Predicate": "(Eq true (ReadLSB w32 0 leaf_sym))",
            "falseQuery": [],
            "isLeaf": "True",
            "state_id": 6,
            "trueQuery": [],
            "wasQueued": "True"
        },
        "7": {
            "Branch Predicate": "(Eq true (ReadLSB w32 0 leaf_sym))",
            "Fork": "True",
            "Negate Predicate": "(Eq true (ReadLSB w32 0 leaf_sym))",
            "falseQuery": [],
            "isLeaf": "True",
            "state_id": 7,
            "trueQuery": [],
            "wasQueued": "True"
        }
    }
}
