{
    "Path 1": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "0eb5442f-b982-45d3-b732-50b187699e8d"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "88ce28c1-cc64-4cd9-ac15-072a4a72eb92"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "13",
                "uid": "d8f55147-bc64-478e-a14a-d743566d0f9d"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Extract",
                            "optype": "BitVectorOp",
                            "const": "0",
                            "right": {
                                "action": "Read",
                                "optype": "MemoryOp",
                                "size": "w8",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        }
    ],
    "Path 2": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "0eb5442f-b982-45d3-b732-50b187699e8d"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "c133fb8d-db70-42ae-93c5-fff56bdc4191"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "8ac060fc-0bf3-44a8-81af-9231958de534"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "23",
                "uid": "1156a12b-52a0-46e7-936a-39b7b3364ab3"
            },
            "predicate": "(Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "1",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 3": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "0eb5442f-b982-45d3-b732-50b187699e8d"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "88ce28c1-cc64-4cd9-ac15-072a4a72eb92"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "12",
                "uid": "5438bb1b-bb21-4230-8645-d808a3e31ac8"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "24",
                "uid": "0a2cd2d8-08e4-493f-aa22-efe3ae3153a7"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 4": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "0eb5442f-b982-45d3-b732-50b187699e8d"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "88ce28c1-cc64-4cd9-ac15-072a4a72eb92"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "12",
                "uid": "5438bb1b-bb21-4230-8645-d808a3e31ac8"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "25",
                "uid": "66f8d8dd-66c0-4905-bad1-38fc424d2357"
            },
            "predicate": "(Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "1",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 5": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "3bad971b-1611-4e02-93ed-b6cff2c15465"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "3b35d5f7-b252-4555-a813-8fced734cdd3"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Extract",
                            "optype": "BitVectorOp",
                            "const": "0",
                            "right": {
                                "action": "Read",
                                "optype": "MemoryOp",
                                "size": "w8",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "1b2d44bf-7442-41d5-8109-b79b8ac14af0"
            },
            "predicate": "(Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "left": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 6": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "3bad971b-1611-4e02-93ed-b6cff2c15465"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "3b35d5f7-b252-4555-a813-8fced734cdd3"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Extract",
                            "optype": "BitVectorOp",
                            "const": "0",
                            "right": {
                                "action": "Read",
                                "optype": "MemoryOp",
                                "size": "w8",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "11",
                "uid": "bcf02e94-70ec-42b1-85b7-3e82c803036f"
            },
            "predicate": "(Eq false (Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "left": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 7": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "0eb5442f-b982-45d3-b732-50b187699e8d"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "c133fb8d-db70-42ae-93c5-fff56bdc4191"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "9",
                "uid": "26cb2450-c7e6-4109-8cdb-f1f8ef7980c0"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Extract",
                            "optype": "BitVectorOp",
                            "const": "0",
                            "right": {
                                "action": "Read",
                                "optype": "MemoryOp",
                                "size": "w8",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "16",
                "uid": "4948a14c-338b-45ec-83f5-34040dc1a81b"
            },
            "predicate": "(Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "left": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 8": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "0eb5442f-b982-45d3-b732-50b187699e8d"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "c133fb8d-db70-42ae-93c5-fff56bdc4191"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "9",
                "uid": "26cb2450-c7e6-4109-8cdb-f1f8ef7980c0"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Extract",
                            "optype": "BitVectorOp",
                            "const": "0",
                            "right": {
                                "action": "Read",
                                "optype": "MemoryOp",
                                "size": "w8",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "17",
                "uid": "0a9e2907-ebba-4cf7-83f2-7dfac9f30942"
            },
            "predicate": "(Eq false (Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "left": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 9": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "3bad971b-1611-4e02-93ed-b6cff2c15465"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "a934b6d3-315e-4445-ad1e-7e86e943bef3"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "14",
                "uid": "6ef15e4f-a80d-4006-9ba6-f9ef5bfaf68d"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "18",
                "uid": "cfbd7e0c-85ca-4597-a7cb-2ebb5b665ba8"
            },
            "predicate": "(Eq 3 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "3",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 10": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "3bad971b-1611-4e02-93ed-b6cff2c15465"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "a934b6d3-315e-4445-ad1e-7e86e943bef3"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "14",
                "uid": "6ef15e4f-a80d-4006-9ba6-f9ef5bfaf68d"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "19",
                "uid": "6f9796e5-cc69-474a-a361-8eaf4de90475"
            },
            "predicate": "(Eq false (Eq 3 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "3",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 11": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "3bad971b-1611-4e02-93ed-b6cff2c15465"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "a934b6d3-315e-4445-ad1e-7e86e943bef3"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "15",
                "uid": "f7d2e137-7603-4802-bf20-a26478380ca5"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "20",
                "uid": "2a3782b3-621e-4c08-8967-c4bfbb4cf054"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 12": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "3bad971b-1611-4e02-93ed-b6cff2c15465"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "a934b6d3-315e-4445-ad1e-7e86e943bef3"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "15",
                "uid": "f7d2e137-7603-4802-bf20-a26478380ca5"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "21",
                "uid": "b265e988-4904-40c8-9ea8-a6ea4880ad90"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 13": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "0eb5442f-b982-45d3-b732-50b187699e8d"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "c133fb8d-db70-42ae-93c5-fff56bdc4191"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "8ac060fc-0bf3-44a8-81af-9231958de534"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "22",
                "uid": "525d58c5-8bdf-455a-b7c3-c181f982be93"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "26",
                "uid": "0fd28da8-a211-4e3c-902d-1036cff87fc9"
            },
            "predicate": "(Eq 3 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "3",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 14": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "0eb5442f-b982-45d3-b732-50b187699e8d"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "c133fb8d-db70-42ae-93c5-fff56bdc4191"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "8ac060fc-0bf3-44a8-81af-9231958de534"
            },
            "predicate": "(Extract 0 (ZExt w8 (Extract 0 (Read w8 0 door_switch_pse_var_sym))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Extract",
                        "optype": "BitVectorOp",
                        "const": "0",
                        "right": {
                            "action": "Read",
                            "optype": "MemoryOp",
                            "size": "w8",
                            "const": "0",
                            "var": "door_switch_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "22",
                "uid": "525d58c5-8bdf-455a-b7c3-c181f982be93"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "27",
                "uid": "c1333bb3-c956-4d34-8bab-79e4c3663bc2"
            },
            "predicate": "(Eq false (Eq 3 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "3",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ]
}