{
    "Path 1": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "5f9e6b53-45a4-4f52-b774-6f24a825a712"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "394400c3-7bc5-45d9-a3ee-e65f340c8c19"
            },
            "predicate": "(And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Sle (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 4)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Eq false (Sle (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 4))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "72ef30f4-8b25-424c-bfe8-69dd414097a7"
            },
            "predicate": "(Sle (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 4)",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 2": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "5f9e6b53-45a4-4f52-b774-6f24a825a712"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "394400c3-7bc5-45d9-a3ee-e65f340c8c19"
            },
            "predicate": "(And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Sle (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 4)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Eq false (Sle (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 4))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "6cc8cc04-13ca-4162-9162-1da2e69d9b5b"
            },
            "predicate": "(Eq false (Sle (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 4))",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 3": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "5f9e6b53-45a4-4f52-b774-6f24a825a712"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "254a7640-26f7-431f-8110-1aed3f3b5daf"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "e1b0fd9b-af2e-4bbf-b49b-65834d5ed494"
            },
            "predicate": "(And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))",
                "(Sle 4 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))",
                "(Eq false (Sle 4 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "b9d223de-448c-4ca8-bb18-6027c3b100cf"
            },
            "predicate": "(Sle 4 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 4": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "5f9e6b53-45a4-4f52-b774-6f24a825a712"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "254a7640-26f7-431f-8110-1aed3f3b5daf"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "e1b0fd9b-af2e-4bbf-b49b-65834d5ed494"
            },
            "predicate": "(And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))",
                "(Sle 4 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))",
                "(Eq false (Sle 4 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "9",
                "uid": "943e7d21-b5be-4c93-8b00-038c2225ff02"
            },
            "predicate": "(Eq false (Sle 4 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 5": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "5f9e6b53-45a4-4f52-b774-6f24a825a712"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "254a7640-26f7-431f-8110-1aed3f3b5daf"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "a2ec7e37-d693-404b-8599-ef1fe9579c82"
            },
            "predicate": "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "b63d169b-1892-432f-ab73-2487ffd16c68"
            },
            "predicate": "(And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Sle 5 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Eq false (Sle 5 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "12",
                "uid": "2215e002-325e-41cd-9597-13434967822c"
            },
            "predicate": "(Sle 5 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 6": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "5f9e6b53-45a4-4f52-b774-6f24a825a712"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "254a7640-26f7-431f-8110-1aed3f3b5daf"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "a2ec7e37-d693-404b-8599-ef1fe9579c82"
            },
            "predicate": "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "b63d169b-1892-432f-ab73-2487ffd16c68"
            },
            "predicate": "(And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Sle 5 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Eq false (Sle 5 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "13",
                "uid": "0c65cf01-7558-4041-9d40-5d7f7ffe7853"
            },
            "predicate": "(Eq false (Sle 5 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 7": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "5f9e6b53-45a4-4f52-b774-6f24a825a712"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "254a7640-26f7-431f-8110-1aed3f3b5daf"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "a2ec7e37-d693-404b-8599-ef1fe9579c82"
            },
            "predicate": "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "11",
                "uid": "d84980c0-b01d-4027-b509-757f709ff50b"
            },
            "predicate": "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt 80000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "14",
                "uid": "5f09a9b7-6066-4910-b63d-90fbd6b077e3"
            },
            "predicate": "(And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt 80000 (ReadLSB w32 0 b2_sym)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 8": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "5f9e6b53-45a4-4f52-b774-6f24a825a712"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "254a7640-26f7-431f-8110-1aed3f3b5daf"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "a2ec7e37-d693-404b-8599-ef1fe9579c82"
            },
            "predicate": "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 80000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "11",
                "uid": "d84980c0-b01d-4027-b509-757f709ff50b"
            },
            "predicate": "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt 80000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 80000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt 80000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "15",
                "uid": "4f1cfa2f-4bc9-4683-aefe-289d7814398d"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt 80000 (ReadLSB w32 0 b2_sym))))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ]
}