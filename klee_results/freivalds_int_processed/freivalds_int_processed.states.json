{
    "symbolic_execution_tree": {
        "0": {
            "Branch Predicate": "(Eq false     (Eq 0         (Sub w32 (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0)                                    (Add w32 (Mul w32 (ReadLSB w32 0 B_sym0)                                                      N0:(ReadLSB w32 0 r_sym_0))                                             (Mul w32 (ReadLSB w32 0 B_sym1)                                                      N1:(ReadLSB w32 0 r_sym_1))))                           (Mul w32 (ReadLSB w32 0 A_sym1)                                    (Add w32 (Mul w32 (ReadLSB w32 0 B_sym2)                                                      N0)                                             (Mul w32 (ReadLSB w32 0 B_sym3)                                                      N1))))                  (Add w32 (Mul w32 (ReadLSB w32 0 C_sym0)                                    N0)                           (Mul w32 (ReadLSB w32 0 C_sym1)                                    N1)))))",
            "Current State Id": 1,
            "False Generate ID": 3,
            "False KLEE Id": 2,
            "Fork": "True",
            "Negate Predicate": "(Eq 0     (Sub w32 (Add w32 (Mul w32 (ReadLSB w32 0 A_sym0)                                (Add w32 (Mul w32 (ReadLSB w32 0 B_sym0)                                                  N0:(ReadLSB w32 0 r_sym_0))                                         (Mul w32 (ReadLSB w32 0 B_sym1)                                                  N1:(ReadLSB w32 0 r_sym_1))))                       (Mul w32 (ReadLSB w32 0 A_sym1)                                (Add w32 (Mul w32 (ReadLSB w32 0 B_sym2)                                                  N0)                                         (Mul w32 (ReadLSB w32 0 B_sym3)                                                  N1))))              (Add w32 (Mul w32 (ReadLSB w32 0 C_sym0)                                N0)                       (Mul w32 (ReadLSB w32 0 C_sym1)                                N1))))",
            "True Generate ID": 2,
            "True KLEE Id": 1,
            "falseQuery": 1,
            "isLeaf": "False",
            "state_id": 0,
            "trueQuery": 0
        },
        "2": {
            "Branch Predicate": "(Eq false     (Eq 0         (Sub w32 (Add w32 (Mul w32 (ReadLSB w32 0 A_sym2)                                    (Add w32 (Mul w32 (ReadLSB w32 0 B_sym0)                                                      N0:(ReadLSB w32 0 r_sym_0))                                             (Mul w32 (ReadLSB w32 0 B_sym1)                                                      N1:(ReadLSB w32 0 r_sym_1))))                           (Mul w32 (ReadLSB w32 0 A_sym3)                                    (Add w32 (Mul w32 (ReadLSB w32 0 B_sym2)                                                      N0)                                             (Mul w32 (ReadLSB w32 0 B_sym3)                                                      N1))))                  (Add w32 (Mul w32 (ReadLSB w32 0 C_sym2)                                    N0)                           (Mul w32 (ReadLSB w32 0 C_sym3)                                    N1)))))",
            "Current State Id": 1,
            "False Generate ID": 7,
            "False KLEE Id": 4,
            "Fork": "True",
            "Negate Predicate": "(Eq 0     (Sub w32 (Add w32 (Mul w32 (ReadLSB w32 0 A_sym2)                                (Add w32 (Mul w32 (ReadLSB w32 0 B_sym0)                                                  N0:(ReadLSB w32 0 r_sym_0))                                         (Mul w32 (ReadLSB w32 0 B_sym1)                                                  N1:(ReadLSB w32 0 r_sym_1))))                       (Mul w32 (ReadLSB w32 0 A_sym3)                                (Add w32 (Mul w32 (ReadLSB w32 0 B_sym2)                                                  N0)                                         (Mul w32 (ReadLSB w32 0 B_sym3)                                                  N1))))              (Add w32 (Mul w32 (ReadLSB w32 0 C_sym2)                                N0)                       (Mul w32 (ReadLSB w32 0 C_sym3)                                N1))))",
            "True Generate ID": 6,
            "True KLEE Id": 1,
            "falseQuery": 1,
            "isLeaf": "False",
            "state_id": 2,
            "trueQuery": 0
        },
        "3": {
            "Branch Predicate": "(Eq false     (Eq 0         (Sub w32 (Add w32 (Mul w32 (ReadLSB w32 0 A_sym2)                                    (Add w32 (Mul w32 (ReadLSB w32 0 B_sym0)                                                      N0:(ReadLSB w32 0 r_sym_0))                                             (Mul w32 (ReadLSB w32 0 B_sym1)                                                      N1:(ReadLSB w32 0 r_sym_1))))                           (Mul w32 (ReadLSB w32 0 A_sym3)                                    (Add w32 (Mul w32 (ReadLSB w32 0 B_sym2)                                                      N0)                                             (Mul w32 (ReadLSB w32 0 B_sym3)                                                      N1))))                  (Add w32 (Mul w32 (ReadLSB w32 0 C_sym2)                                    N0)                           (Mul w32 (ReadLSB w32 0 C_sym3)                                    N1)))))",
            "Current State Id": 2,
            "False Generate ID": 5,
            "False KLEE Id": 3,
            "Fork": "True",
            "Negate Predicate": "(Eq 0     (Sub w32 (Add w32 (Mul w32 (ReadLSB w32 0 A_sym2)                                (Add w32 (Mul w32 (ReadLSB w32 0 B_sym0)                                                  N0:(ReadLSB w32 0 r_sym_0))                                         (Mul w32 (ReadLSB w32 0 B_sym1)                                                  N1:(ReadLSB w32 0 r_sym_1))))                       (Mul w32 (ReadLSB w32 0 A_sym3)                                (Add w32 (Mul w32 (ReadLSB w32 0 B_sym2)                                                  N0)                                         (Mul w32 (ReadLSB w32 0 B_sym3)                                                  N1))))              (Add w32 (Mul w32 (ReadLSB w32 0 C_sym2)                                N0)                       (Mul w32 (ReadLSB w32 0 C_sym3)                                N1))))",
            "True Generate ID": 4,
            "True KLEE Id": 2,
            "falseQuery": 1,
            "isLeaf": "False",
            "state_id": 3,
            "trueQuery": 0
        },
        "4": {
            "Branch Predicate": "null",
            "Fork": "True",
            "Negate Predicate": "null",
            "falseQuery": 1,
            "isLeaf": "True",
            "state_id": 4,
            "trueQuery": 0
        },
        "5": {
            "Branch Predicate": "null",
            "Fork": "True",
            "Negate Predicate": "null",
            "falseQuery": 1,
            "isLeaf": "True",
            "state_id": 5,
            "trueQuery": 0
        },
        "6": {
            "Branch Predicate": "null",
            "Fork": "True",
            "Negate Predicate": "null",
            "falseQuery": 1,
            "isLeaf": "True",
            "state_id": 6,
            "trueQuery": 0
        },
        "7": {
            "Branch Predicate": "null",
            "Fork": "True",
            "Negate Predicate": "null",
            "falseQuery": 1,
            "isLeaf": "True",
            "state_id": 7,
            "trueQuery": 0
        }
    }
}
