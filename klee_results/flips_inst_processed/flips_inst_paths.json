{
    "Path 1": [
        {
            "treeNode": {
                "nodeId": "1",
                "emphemeralId": "1",
                "uid": "51183732-8eee-44ea-9274-211133b2368e"
            },
            "nodeTrueQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Eq false (Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "2",
                "emphemeralId": "2",
                "uid": "1d2ad3cf-8aab-461f-a3cf-738c5f4c6a81"
            },
            "predicate": "(Slt (ReadLSB w32 0 temp_c1_0)       (ReadLSB w32 0 b1_sym))",
            "EmphemeralId": "2",
            "removed": false,
            "predicateId": "cond_true_1",
            "variables": [
                "temp_c1_0",
                "b1_sym"
            ],
            "IMap": {
                "N0:": "afca9093-1fda-4682-b819-7be781406afc",
                "b2_sym": "afca9093-1fda-4682-b819-7be781406afc",
                "temp_c1_0": "f7f2e220-93f0-4e7e-bc2e-33a68438b23f",
                "b1_sym": "f7f2e220-93f0-4e7e-bc2e-33a68438b23f"
            },
            "nodeTrueQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) (ReadLSB w32 0 temp_c2_0))",
                "(Slt (Add w32 (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum2_sym) (ZExt w32 (Sle N0:(ReadLSB w32 0 b2_sym) (ReadLSB w32 0 temp_c2_0)))) (ZExt w32 (Sle N0 (ReadLSB w32 0 temp_c2_1)))) (ZExt w32 (Sle N0 (ReadLSB w32 0 temp_c2_2)))) (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum1_sym) (ZExt w32 (Sle N1:(ReadLSB w32 0 b1_sym) (ReadLSB w32 0 temp_c1_0)))) (ZExt w32 (Sle N1 (ReadLSB w32 0 temp_c1_1)))) (ZExt w32 (Sle N1 (ReadLSB w32 0 temp_c1_2))))) 6)"
            ],
            "nodeFalseQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym))",
                "(Eq false (And (Slt N0:(ReadLSB w32 0 b2_sym) N1:(ReadLSB w32 0 temp_c2_0)) (Slt (Add w32 (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum2_sym) (ZExt w32 (Sle N0 N1))) (ZExt w32 (Sle N0 (ReadLSB w32 0 temp_c2_1)))) (ZExt w32 (Sle N0 (ReadLSB w32 0 temp_c2_2)))) (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum1_sym) (ZExt w32 (Sle N2:(ReadLSB w32 0 b1_sym) (ReadLSB w32 0 temp_c1_0)))) (ZExt w32 (Sle N2 (ReadLSB w32 0 temp_c1_1)))) (ZExt w32 (Sle N2 (ReadLSB w32 0 temp_c1_2))))) 6)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "emphemeralId": "8",
                "uid": "85eb8e4d-0439-4fe5-850a-5bcfa4c73fa9"
            },
            "predicate": "(And (Slt N0:(ReadLSB w32 0 b2_sym)            N1:(ReadLSB w32 0 temp_c2_0))       (Slt (Add w32 (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum2_sym)                                                (ZExt w32 (Sle N0 N1)))                                       (ZExt w32 (Sle N0                                                      (ReadLSB w32 0 temp_c2_1))))                              (ZExt w32 (Sle N0                                             (ReadLSB w32 0 temp_c2_2))))                     (Add w32 (Add w32 (Add w32 (ReadLSB w32 0 sum1_sym)                                                (ZExt w32 (Sle N2:(ReadLSB w32 0 b1_sym)                                                               (ReadLSB w32 0 temp_c1_0))))                                       (ZExt w32 (Sle N2                                                      (ReadLSB w32 0 temp_c1_1))))                              (ZExt w32 (Sle N2                                             (ReadLSB w32 0 temp_c1_2)))))            6))",
            "EmphemeralId": 8,
            "removed": false,
            "predicateId": "cond_true_2",
            "variables": [
                "N0:",
                "b2_sym",
                "N1:",
                "temp_c2_0",
                "sum2_sym",
                "N0",
                "N1",
                "N0",
                "temp_c2_1",
                "N0",
                "temp_c2_2",
                "sum1_sym",
                "N2:",
                "b1_sym",
                "temp_c1_0",
                "N2",
                "temp_c1_1",
                "N2",
                "temp_c1_2"
            ],
            "IMap": {
                "N0:": "afca9093-1fda-4682-b819-7be781406afc",
                "b2_sym": "afca9093-1fda-4682-b819-7be781406afc",
                "temp_c1_0": "f7f2e220-93f0-4e7e-bc2e-33a68438b23f",
                "b1_sym": "f7f2e220-93f0-4e7e-bc2e-33a68438b23f"
            },
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 4": [
        {
            "treeNode": {
                "nodeId": "1",
                "emphemeralId": "1",
                "uid": "51183732-8eee-44ea-9274-211133b2368e"
            },
            "nodeTrueQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Eq false (Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "emphemeralId": "3",
                "uid": "d8c24f35-212c-44d1-89d5-3c5cad1c07d2"
            },
            "predicate": "(Eq false      (Slt (ReadLSB w32 0 temp_c1_0)           (ReadLSB w32 0 b1_sym)))",
            "EmphemeralId": "3",
            "removed": false,
            "predicateId": "cond_false_1",
            "variables": [
                "temp_c1_0",
                "b1_sym"
            ],
            "IMap": {
                "temp_c2_0": "c3deb01e-df29-4a1e-9f79-a49fa6c2703f",
                "b2_sym": "c3deb01e-df29-4a1e-9f79-a49fa6c2703f",
                "b1_sym": "c4754030-4013-41ab-86e9-d2a5e00ca38f",
                "temp_c1_0": "c4754030-4013-41ab-86e9-d2a5e00ca38f"
            },
            "nodeTrueQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Eq false (Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym)))",
                "(Slt (ReadLSB w32 0 b1_sym) (ReadLSB w32 0 temp_c1_0))"
            ],
            "nodeFalseQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Eq false (Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym)))",
                "(Eq false (Slt (ReadLSB w32 0 b1_sym) (ReadLSB w32 0 temp_c1_0)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "emphemeralId": "4",
                "uid": "3c0bb0bc-2370-40cc-a293-ef7827698366"
            },
            "predicate": "(Slt (ReadLSB w32 0 b1_sym)       (ReadLSB w32 0 temp_c1_0))",
            "EmphemeralId": "4",
            "removed": false,
            "predicateId": "cond_true_3",
            "variables": [
                "b1_sym",
                "temp_c1_0"
            ],
            "IMap": {
                "temp_c2_0": "c3deb01e-df29-4a1e-9f79-a49fa6c2703f",
                "b2_sym": "c3deb01e-df29-4a1e-9f79-a49fa6c2703f",
                "b1_sym": "c4754030-4013-41ab-86e9-d2a5e00ca38f",
                "temp_c1_0": "c4754030-4013-41ab-86e9-d2a5e00ca38f"
            },
            "nodeTrueQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Eq false (Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym)))",
                "(Slt (ReadLSB w32 0 b1_sym) (ReadLSB w32 0 temp_c1_0))",
                "(Slt (ReadLSB w32 0 temp_c2_0) (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 1 (ReadLSB w32 0 temp_c1_0))",
                "(Sle (ReadLSB w32 0 temp_c1_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_0))",
                "(Sle (ReadLSB w32 0 coin1_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_1))",
                "(Sle (ReadLSB w32 0 temp_c1_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_1))",
                "(Sle (ReadLSB w32 0 coin1_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c1_2))",
                "(Sle (ReadLSB w32 0 temp_c1_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin1_index_2))",
                "(Sle (ReadLSB w32 0 coin1_index_2) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_0))",
                "(Sle (ReadLSB w32 0 temp_c2_0) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_0))",
                "(Sle (ReadLSB w32 0 coin2_index_0) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_1))",
                "(Sle (ReadLSB w32 0 temp_c2_1) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_1))",
                "(Sle (ReadLSB w32 0 coin2_index_1) 1)",
                "(Sle 1 (ReadLSB w32 0 temp_c2_2))",
                "(Sle (ReadLSB w32 0 temp_c2_2) 100000)",
                "(Sle 0 (ReadLSB w32 0 coin2_index_2))",
                "(Sle (ReadLSB w32 0 coin2_index_2) 1)",
                "(Eq false (Slt (ReadLSB w32 0 temp_c1_0) (ReadLSB w32 0 b1_sym)))",
                "(Slt (ReadLSB w32 0 b1_sym) (ReadLSB w32 0 temp_c1_0))",
                "(Eq false (Slt (ReadLSB w32 0 temp_c2_0) (ReadLSB w32 0 b2_sym)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "emphemeralId": "6",
                "uid": "17404cf5-bd5d-4fd8-818d-ce2b390a1dbe"
            },
            "predicate": "(Slt (ReadLSB w32 0 temp_c2_0)       (ReadLSB w32 0 b2_sym))",
            "EmphemeralId": 6,
            "removed": false,
            "predicateId": "cond_true_4",
            "variables": [
                "temp_c2_0",
                "b2_sym"
            ],
            "IMap": {
                "temp_c2_0": "c3deb01e-df29-4a1e-9f79-a49fa6c2703f",
                "b2_sym": "c3deb01e-df29-4a1e-9f79-a49fa6c2703f",
                "b1_sym": "c4754030-4013-41ab-86e9-d2a5e00ca38f",
                "temp_c1_0": "c4754030-4013-41ab-86e9-d2a5e00ca38f"
            },
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ]
}