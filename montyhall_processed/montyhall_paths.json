{
    "Path 1": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "de42702b-5970-4dfe-92a3-5b04e928a09b"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "881ca289-8583-4107-bab2-2d40ba3e5482"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "13",
                "uid": "25763020-e1b3-4321-b914-6995e60769a9"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        }
    ],
    "Path 2": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "de42702b-5970-4dfe-92a3-5b04e928a09b"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "f305c447-d331-4444-b883-c8b32412383e"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "e5cdbf6e-9cb5-40a9-bd0e-a794c6a2350a"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "19",
                "uid": "26e10035-9988-409b-b31a-3a7185ecc88e"
            },
            "predicate": "(Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "1",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 3": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "de42702b-5970-4dfe-92a3-5b04e928a09b"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "881ca289-8583-4107-bab2-2d40ba3e5482"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "12",
                "uid": "5da8bf2d-f3de-42db-a80d-5dae679cbdb6"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "24",
                "uid": "f752e777-8cac-4839-adaf-db8d25730a3f"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 4": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "de42702b-5970-4dfe-92a3-5b04e928a09b"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "881ca289-8583-4107-bab2-2d40ba3e5482"
            },
            "predicate": "(Eq false (And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "2",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "12",
                "uid": "5da8bf2d-f3de-42db-a80d-5dae679cbdb6"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "25",
                "uid": "bfc86355-3872-4dac-8396-8e2a05df5a15"
            },
            "predicate": "(Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "1",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        }
    ],
    "Path 5": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "af55790f-424c-4195-a8ff-76abf996563e"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "7c711979-d6d4-41d3-9d72-28d49a1d4709"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "cfce76e2-c38e-4ad7-9e88-1c9979da3537"
            },
            "predicate": "(Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "left": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 6": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "af55790f-424c-4195-a8ff-76abf996563e"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "7c711979-d6d4-41d3-9d72-28d49a1d4709"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "9",
                "uid": "ab42808d-d178-41a6-bf0f-59ff29a25ce8"
            },
            "predicate": "(Eq false (Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "left": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 7": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "de42702b-5970-4dfe-92a3-5b04e928a09b"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "f305c447-d331-4444-b883-c8b32412383e"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "11",
                "uid": "3a2941a1-8dad-4b90-9d8f-1ca7a18e9b7a"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "14",
                "uid": "ed4d1765-5083-40f9-8ad5-421482e394be"
            },
            "predicate": "(Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "left": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 8": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "de42702b-5970-4dfe-92a3-5b04e928a09b"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "f305c447-d331-4444-b883-c8b32412383e"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "11",
                "uid": "3a2941a1-8dad-4b90-9d8f-1ca7a18e9b7a"
            },
            "predicate": "(Eq false (Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym))))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Extract",
                    "optype": "BitVectorOp",
                    "const": "0",
                    "right": {
                        "action": "ZExt",
                        "optype": "BitVectorOp",
                        "size": "w8",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "bool": "false",
                            "right": {
                                "action": "Eq",
                                "optype": "CompareOp",
                                "const": "0",
                                "right": {
                                    "action": "ReadLSB",
                                    "optype": "MacroOp",
                                    "size": "w32",
                                    "const": "0",
                                    "var": "door_switch_pse_var_sym"
                                }
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "15",
                "uid": "b73f5896-50a4-4075-9e07-780ed115928a"
            },
            "predicate": "(Eq false (Eq (ReadLSB w32 0 choice_pse_var_sym) (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "left": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym",
                    "car_door_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym",
                "car_door_sym"
            ]
        }
    ],
    "Path 9": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "af55790f-424c-4195-a8ff-76abf996563e"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "29cc0ae3-f342-4fe2-b797-8b4029a4dae7"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "16",
                "uid": "5b488e4a-f586-477b-a0f0-b25bb3a7df0d"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "20",
                "uid": "090fb264-eb1e-4e6d-ac84-549f471fc260"
            },
            "predicate": "(Eq 3 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "3",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 10": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "af55790f-424c-4195-a8ff-76abf996563e"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "29cc0ae3-f342-4fe2-b797-8b4029a4dae7"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "16",
                "uid": "5b488e4a-f586-477b-a0f0-b25bb3a7df0d"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "21",
                "uid": "bff64b8d-feab-4458-a487-a3b8142a3723"
            },
            "predicate": "(Eq false (Eq 3 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "3",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 11": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "af55790f-424c-4195-a8ff-76abf996563e"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "29cc0ae3-f342-4fe2-b797-8b4029a4dae7"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "17",
                "uid": "144d4f43-4b6b-47ce-89df-2b67c6822a7e"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "22",
                "uid": "649ccf20-00d3-474c-9918-9f2f09331183"
            },
            "predicate": "(Eq 2 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "2",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 12": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "af55790f-424c-4195-a8ff-76abf996563e"
            },
            "predicate": "(And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "1",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "29cc0ae3-f342-4fe2-b797-8b4029a4dae7"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "17",
                "uid": "144d4f43-4b6b-47ce-89df-2b67c6822a7e"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "choice_pse_var_sym"
                    }
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "23",
                "uid": "d9e81e22-3ea6-4454-9721-5d941c98b923"
            },
            "predicate": "(Eq false (Eq 2 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "2",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 13": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "de42702b-5970-4dfe-92a3-5b04e928a09b"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "f305c447-d331-4444-b883-c8b32412383e"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "e5cdbf6e-9cb5-40a9-bd0e-a794c6a2350a"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "18",
                "uid": "9be33cf7-ae0b-484c-bb2a-81c567f255c5"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "26",
                "uid": "73311cb7-e358-40d4-a062-6181a345373a"
            },
            "predicate": "(Eq 3 (ReadLSB w32 0 car_door_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "3",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "car_door_sym"
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ],
    "Path 14": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "de42702b-5970-4dfe-92a3-5b04e928a09b"
            },
            "predicate": "(Eq false (And (Eq false (Eq 1 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 1 (ReadLSB w32 0 choice_pse_var_sym)))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "car_door_sym"
                            }
                        }
                    },
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "1",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "choice_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "f305c447-d331-4444-b883-c8b32412383e"
            },
            "predicate": "(And (Eq false (Eq 2 (ReadLSB w32 0 car_door_sym))) (Eq false (Eq 2 (ReadLSB w32 0 choice_pse_var_sym))))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "car_door_sym"
                        }
                    }
                },
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "bool": "false",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "const": "2",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "choice_pse_var_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym",
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "car_door_sym",
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "e5cdbf6e-9cb5-40a9-bd0e-a794c6a2350a"
            },
            "predicate": "(Extract 0 (ZExt w8 (Eq false (Eq 0 (ReadLSB w32 0 door_switch_pse_var_sym)))))",
            "parse": {
                "action": "Extract",
                "optype": "BitVectorOp",
                "const": "0",
                "right": {
                    "action": "ZExt",
                    "optype": "BitVectorOp",
                    "size": "w8",
                    "right": {
                        "action": "Eq",
                        "optype": "CompareOp",
                        "bool": "false",
                        "right": {
                            "action": "Eq",
                            "optype": "CompareOp",
                            "const": "0",
                            "right": {
                                "action": "ReadLSB",
                                "optype": "MacroOp",
                                "size": "w32",
                                "const": "0",
                                "var": "door_switch_pse_var_sym"
                            }
                        }
                    }
                }
            },
            "imap": [
                [
                    "door_switch_pse_var_sym"
                ]
            ],
            "vars": [
                "door_switch_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "18",
                "uid": "9be33cf7-ae0b-484c-bb2a-81c567f255c5"
            },
            "predicate": "(Eq 1 (ReadLSB w32 0 choice_pse_var_sym))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "const": "1",
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "choice_pse_var_sym"
                }
            },
            "imap": [
                [
                    "choice_pse_var_sym"
                ]
            ],
            "vars": [
                "choice_pse_var_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "27",
                "uid": "64975d56-7ed8-4bf9-a545-c25c4b1e936a"
            },
            "predicate": "(Eq false (Eq 3 (ReadLSB w32 0 car_door_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Eq",
                    "optype": "CompareOp",
                    "const": "3",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "car_door_sym"
                    }
                }
            },
            "imap": [
                [
                    "car_door_sym"
                ]
            ],
            "vars": [
                "car_door_sym"
            ]
        }
    ]
}