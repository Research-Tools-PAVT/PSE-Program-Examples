{
    "Path 1": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "55c5fdbe-27a4-45a6-99ed-2229e759de41"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "540a5cfa-60fb-4c08-86ff-9f00b9cbbc7b"
            },
            "predicate": "(And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Slt 3 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Eq false (Slt 3 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "57b7f666-89b5-44c4-a50e-cc49ddf55809"
            },
            "predicate": "(Slt 3 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 2": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "55c5fdbe-27a4-45a6-99ed-2229e759de41"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "540a5cfa-60fb-4c08-86ff-9f00b9cbbc7b"
            },
            "predicate": "(And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Slt 3 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)",
                "(Eq false (Slt 3 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "bad13a66-e9ca-49be-8b01-26615f1f06bd"
            },
            "predicate": "(Eq false (Slt 3 (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym))))",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 3": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "55c5fdbe-27a4-45a6-99ed-2229e759de41"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "e12024cb-c62f-410e-9188-8d8a3c6b7f74"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "323d7674-0b0e-48fb-b3c5-f694f9ba72bc"
            },
            "predicate": "(And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Eq false (Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "9",
                "uid": "6569cdca-a109-4013-9c19-52bb9547c7bc"
            },
            "predicate": "(Eq false (Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6))",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 4": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "55c5fdbe-27a4-45a6-99ed-2229e759de41"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "e12024cb-c62f-410e-9188-8d8a3c6b7f74"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "d7a9cc07-63b2-4a29-b832-2644c9911a3d"
            },
            "predicate": "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 95000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 5000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 95000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 5000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "14",
                "uid": "fba8d157-dd52-4dd0-951a-45c7b4a938bc"
            },
            "predicate": "(And (Slt 95000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 5000))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 5": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "55c5fdbe-27a4-45a6-99ed-2229e759de41"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "e12024cb-c62f-410e-9188-8d8a3c6b7f74"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "d7a9cc07-63b2-4a29-b832-2644c9911a3d"
            },
            "predicate": "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))",
                "(Slt 95000 (ReadLSB w32 0 b1_sym))",
                "(Slt (ReadLSB w32 0 b2_sym) 5000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))",
                "(Eq false (And (Slt 95000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 5000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "15",
                "uid": "4bf3ea20-de52-40a4-a168-dbcf5a20fae7"
            },
            "predicate": "(Eq false (And (Slt 95000 (ReadLSB w32 0 b1_sym)) (Slt (ReadLSB w32 0 b2_sym) 5000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 6": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "55c5fdbe-27a4-45a6-99ed-2229e759de41"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "e12024cb-c62f-410e-9188-8d8a3c6b7f74"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "323d7674-0b0e-48fb-b3c5-f694f9ba72bc"
            },
            "predicate": "(And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Eq false (Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "95923d4b-008d-4082-9ffb-8b6ac094f3e1"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Sle (ReadLSB w32 0 b1_sym) 98823)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Eq false (Sle (ReadLSB w32 0 b1_sym) 98823))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "11",
                "uid": "877bbdd8-b9ef-4c03-8b10-57b8077d5532"
            },
            "predicate": "(Eq false (Sle (ReadLSB w32 0 b1_sym) 98823))",
            "variables": [
                "b1_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 7": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "55c5fdbe-27a4-45a6-99ed-2229e759de41"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "e12024cb-c62f-410e-9188-8d8a3c6b7f74"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "323d7674-0b0e-48fb-b3c5-f694f9ba72bc"
            },
            "predicate": "(And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Eq false (Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "95923d4b-008d-4082-9ffb-8b6ac094f3e1"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Sle (ReadLSB w32 0 b1_sym) 98823)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Eq false (Sle (ReadLSB w32 0 b1_sym) 98823))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "b0c2e419-3d70-4878-89d3-8579ea64ba91"
            },
            "predicate": "(Sle (ReadLSB w32 0 b1_sym) 98823)",
            "variables": [
                "b1_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Sle (ReadLSB w32 0 b1_sym) 98823)",
                "(Sle (ReadLSB w32 0 b2_sym) 93517)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Sle (ReadLSB w32 0 b1_sym) 98823)",
                "(Eq false (Sle (ReadLSB w32 0 b2_sym) 93517))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "12",
                "uid": "75360989-6fca-4214-a57c-abab3a0479e4"
            },
            "predicate": "(Sle (ReadLSB w32 0 b2_sym) 93517)",
            "variables": [
                "b2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ],
    "Path 8": [
        {
            "treeNode": {
                "nodeId": "1",
                "uid": "55c5fdbe-27a4-45a6-99ed-2229e759de41"
            },
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Slt (ReadLSB w32 0 b1_sym) 10000)",
                "(Slt (ReadLSB w32 0 b2_sym) 10000)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "e12024cb-c62f-410e-9188-8d8a3c6b7f74"
            },
            "predicate": "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Eq false (And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym))))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "323d7674-0b0e-48fb-b3c5-f694f9ba72bc"
            },
            "predicate": "(And (Slt 85000 (ReadLSB w32 0 b1_sym)) (Slt 90000 (ReadLSB w32 0 b2_sym)))",
            "variables": [
                "b1_sym",
                "b2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Eq false (Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "95923d4b-008d-4082-9ffb-8b6ac094f3e1"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
            "variables": [
                "sum1_sym",
                "sum2_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Sle (ReadLSB w32 0 b1_sym) 98823)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Eq false (Sle (ReadLSB w32 0 b1_sym) 98823))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "10",
                "uid": "b0c2e419-3d70-4878-89d3-8579ea64ba91"
            },
            "predicate": "(Sle (ReadLSB w32 0 b1_sym) 98823)",
            "variables": [
                "b1_sym"
            ],
            "nodeTrueQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Sle (ReadLSB w32 0 b1_sym) 98823)",
                "(Sle (ReadLSB w32 0 b2_sym) 93517)"
            ],
            "nodeFalseQuery": [
                "(Sle 0 (ReadLSB w32 0 coin1_arr_sym))",
                "(Sle (ReadLSB w32 0 coin1_arr_sym) 1)",
                "(Sle 0 (ReadLSB w32 0 coin2_arr_sym))",
                "(Sle (ReadLSB w32 0 coin2_arr_sym) 1)",
                "(Eq false (And (Slt (ReadLSB w32 0 b1_sym) 10000) (Slt (ReadLSB w32 0 b2_sym) 10000)))",
                "(Slt 85000 (ReadLSB w32 0 b1_sym))",
                "(Slt 90000 (ReadLSB w32 0 b2_sym))",
                "(Slt (Add w32 (ReadLSB w32 0 sum1_sym) (ReadLSB w32 0 sum2_sym)) 6)",
                "(Sle (ReadLSB w32 0 b1_sym) 98823)",
                "(Eq false (Sle (ReadLSB w32 0 b2_sym) 93517))"
            ]
        },
        {
            "treeNode": {
                "nodeId": "13",
                "uid": "539987cf-db7f-4ba3-a61f-bdb2336079f6"
            },
            "predicate": "(Eq false (Sle (ReadLSB w32 0 b2_sym) 93517))",
            "variables": [
                "b2_sym"
            ],
            "nodeTrueQuery": [],
            "nodeFalseQuery": []
        }
    ]
}