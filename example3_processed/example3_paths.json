{
    "Path 1": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "423f293a-9567-454c-b97f-953ed7ee6efd"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 b_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 a_pse_sym))",
            "parse": {
                "action": "Slt",
                "optype": "CompareOp",
                "left": {
                    "action": "Add",
                    "optype": "BinaryArithOp",
                    "size": "w32",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_pse_sym"
                    },
                    "arg_3": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "a_pse_sym"
                }
            },
            "imap": [
                [
                    "b_pse_sym",
                    "c_sym",
                    "a_pse_sym"
                ]
            ],
            "vars": [
                "b_pse_sym",
                "c_sym",
                "a_pse_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "685af50e-26be-48ec-b0fb-5988e817eb95"
            },
            "predicate": "(Slt (Sub w32 (ReadLSB w32 0 c_sym) (ReadLSB w32 0 a_pse_sym)) (ReadLSB w32 0 b_pse_sym))",
            "parse": {
                "action": "Slt",
                "optype": "CompareOp",
                "left": {
                    "action": "Sub",
                    "optype": "BinaryArithOp",
                    "size": "w32",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    },
                    "arg_3": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_pse_sym"
                    }
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "b_pse_sym"
                }
            },
            "imap": [
                [
                    "c_sym",
                    "a_pse_sym",
                    "b_pse_sym"
                ]
            ],
            "vars": [
                "c_sym",
                "a_pse_sym",
                "b_pse_sym"
            ]
        }
    ],
    "Path 2": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "7d5950a5-2f16-4b25-b04e-85c79b064a17"
            },
            "predicate": "(Eq false (Slt (Add w32 (ReadLSB w32 0 b_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 a_pse_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "left": {
                        "action": "Add",
                        "optype": "BinaryArithOp",
                        "size": "w32",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "b_pse_sym"
                        },
                        "arg_3": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "c_sym"
                        }
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_pse_sym"
                    }
                }
            },
            "imap": [
                [
                    "b_pse_sym",
                    "c_sym",
                    "a_pse_sym"
                ]
            ],
            "vars": [
                "b_pse_sym",
                "c_sym",
                "a_pse_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "0641d0ef-b44c-4669-9078-ee3acba74235"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 a_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 b_pse_sym))",
            "parse": {
                "action": "Slt",
                "optype": "CompareOp",
                "left": {
                    "action": "Add",
                    "optype": "BinaryArithOp",
                    "size": "w32",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_pse_sym"
                    },
                    "arg_3": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "b_pse_sym"
                }
            },
            "imap": [
                [
                    "a_pse_sym",
                    "c_sym",
                    "b_pse_sym"
                ]
            ],
            "vars": [
                "a_pse_sym",
                "c_sym",
                "b_pse_sym"
            ]
        }
    ],
    "Path 3": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "7d5950a5-2f16-4b25-b04e-85c79b064a17"
            },
            "predicate": "(Eq false (Slt (Add w32 (ReadLSB w32 0 b_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 a_pse_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "left": {
                        "action": "Add",
                        "optype": "BinaryArithOp",
                        "size": "w32",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "b_pse_sym"
                        },
                        "arg_3": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "c_sym"
                        }
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_pse_sym"
                    }
                }
            },
            "imap": [
                [
                    "b_pse_sym",
                    "c_sym",
                    "a_pse_sym"
                ]
            ],
            "vars": [
                "b_pse_sym",
                "c_sym",
                "a_pse_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "689f747e-7487-482d-98e8-2538a92234d7"
            },
            "predicate": "(Eq false (Slt (Add w32 (ReadLSB w32 0 a_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 b_pse_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "left": {
                        "action": "Add",
                        "optype": "BinaryArithOp",
                        "size": "w32",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "a_pse_sym"
                        },
                        "arg_3": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "c_sym"
                        }
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_pse_sym"
                    }
                }
            },
            "imap": [
                [
                    "a_pse_sym",
                    "c_sym",
                    "b_pse_sym"
                ]
            ],
            "vars": [
                "a_pse_sym",
                "c_sym",
                "b_pse_sym"
            ]
        }
    ],
    "Path 4": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "423f293a-9567-454c-b97f-953ed7ee6efd"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 b_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 a_pse_sym))",
            "parse": {
                "action": "Slt",
                "optype": "CompareOp",
                "left": {
                    "action": "Add",
                    "optype": "BinaryArithOp",
                    "size": "w32",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_pse_sym"
                    },
                    "arg_3": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "a_pse_sym"
                }
            },
            "imap": [
                [
                    "b_pse_sym",
                    "c_sym",
                    "a_pse_sym"
                ]
            ],
            "vars": [
                "b_pse_sym",
                "c_sym",
                "a_pse_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "a7b75440-8766-441e-85a6-873a3b940474"
            },
            "predicate": "(Eq false (Slt (Sub w32 (ReadLSB w32 0 c_sym) (ReadLSB w32 0 a_pse_sym)) (ReadLSB w32 0 b_pse_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "left": {
                        "action": "Sub",
                        "optype": "BinaryArithOp",
                        "size": "w32",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "c_sym"
                        },
                        "arg_3": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "a_pse_sym"
                        }
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_pse_sym"
                    }
                }
            },
            "imap": [
                [
                    "c_sym",
                    "a_pse_sym",
                    "b_pse_sym"
                ]
            ],
            "vars": [
                "c_sym",
                "a_pse_sym",
                "b_pse_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "8",
                "uid": "7ee862fb-bcb0-4d6d-9d61-4e38c1c8b558"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 a_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 b_pse_sym))",
            "parse": {
                "action": "Slt",
                "optype": "CompareOp",
                "left": {
                    "action": "Add",
                    "optype": "BinaryArithOp",
                    "size": "w32",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_pse_sym"
                    },
                    "arg_3": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "b_pse_sym"
                }
            },
            "imap": [
                [
                    "a_pse_sym",
                    "c_sym",
                    "b_pse_sym"
                ]
            ],
            "vars": [
                "a_pse_sym",
                "c_sym",
                "b_pse_sym"
            ]
        }
    ],
    "Path 5": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "423f293a-9567-454c-b97f-953ed7ee6efd"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 b_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 a_pse_sym))",
            "parse": {
                "action": "Slt",
                "optype": "CompareOp",
                "left": {
                    "action": "Add",
                    "optype": "BinaryArithOp",
                    "size": "w32",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_pse_sym"
                    },
                    "arg_3": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "a_pse_sym"
                }
            },
            "imap": [
                [
                    "b_pse_sym",
                    "c_sym",
                    "a_pse_sym"
                ]
            ],
            "vars": [
                "b_pse_sym",
                "c_sym",
                "a_pse_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "a7b75440-8766-441e-85a6-873a3b940474"
            },
            "predicate": "(Eq false (Slt (Sub w32 (ReadLSB w32 0 c_sym) (ReadLSB w32 0 a_pse_sym)) (ReadLSB w32 0 b_pse_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "left": {
                        "action": "Sub",
                        "optype": "BinaryArithOp",
                        "size": "w32",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "c_sym"
                        },
                        "arg_3": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "a_pse_sym"
                        }
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_pse_sym"
                    }
                }
            },
            "imap": [
                [
                    "c_sym",
                    "a_pse_sym",
                    "b_pse_sym"
                ]
            ],
            "vars": [
                "c_sym",
                "a_pse_sym",
                "b_pse_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "9",
                "uid": "e9c5a2f7-8e8c-4db2-b1c2-f9663055f6a6"
            },
            "predicate": "(Eq false (Slt (Add w32 (ReadLSB w32 0 a_pse_sym) (ReadLSB w32 0 c_sym)) (ReadLSB w32 0 b_pse_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "left": {
                        "action": "Add",
                        "optype": "BinaryArithOp",
                        "size": "w32",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "a_pse_sym"
                        },
                        "arg_3": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "c_sym"
                        }
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_pse_sym"
                    }
                }
            },
            "imap": [
                [
                    "a_pse_sym",
                    "c_sym",
                    "b_pse_sym"
                ]
            ],
            "vars": [
                "a_pse_sym",
                "c_sym",
                "b_pse_sym"
            ]
        }
    ]
}