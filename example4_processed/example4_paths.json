{
    "Path 1": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "6f8dc89e-9295-4cd2-8600-ff0f48615a9f"
            },
            "predicate": "(Eq false (And (Slt 0 (ReadLSB w32 0 a_sym)) (Slt 0 (ReadLSB w32 0 c_sym))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Slt",
                        "optype": "CompareOp",
                        "const": "0",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "a_sym"
                        }
                    },
                    "right": {
                        "action": "Slt",
                        "optype": "CompareOp",
                        "const": "0",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "c_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "a_sym",
                    "c_sym"
                ]
            ],
            "vars": [
                "a_sym",
                "c_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "4",
                "uid": "dfee947f-1472-4bd6-b2e9-5dc1aae281b5"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 a_sym) (ReadLSB w32 0 b_sym)) (ReadLSB w32 0 c_sym))",
            "parse": {
                "action": "Slt",
                "optype": "CompareOp",
                "left": {
                    "action": "Add",
                    "optype": "BinaryArithOp",
                    "size": "w32",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_sym"
                    },
                    "arg_3": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_sym"
                    }
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "c_sym"
                }
            },
            "imap": [
                [
                    "a_sym",
                    "b_sym",
                    "c_sym"
                ]
            ],
            "vars": [
                "a_sym",
                "b_sym",
                "c_sym"
            ]
        }
    ],
    "Path 2": [
        {
            "treeNode": {
                "nodeId": "3",
                "uid": "6f8dc89e-9295-4cd2-8600-ff0f48615a9f"
            },
            "predicate": "(Eq false (And (Slt 0 (ReadLSB w32 0 a_sym)) (Slt 0 (ReadLSB w32 0 c_sym))))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "And",
                    "optype": "BitwiseOp",
                    "left": {
                        "action": "Slt",
                        "optype": "CompareOp",
                        "const": "0",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "a_sym"
                        }
                    },
                    "right": {
                        "action": "Slt",
                        "optype": "CompareOp",
                        "const": "0",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "c_sym"
                        }
                    }
                }
            },
            "imap": [
                [
                    "a_sym",
                    "c_sym"
                ]
            ],
            "vars": [
                "a_sym",
                "c_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "5",
                "uid": "400b5a70-e14c-424c-ace8-cff9a0c42b71"
            },
            "predicate": "(Eq false (Slt (Add w32 (ReadLSB w32 0 a_sym) (ReadLSB w32 0 b_sym)) (ReadLSB w32 0 c_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "left": {
                        "action": "Add",
                        "optype": "BinaryArithOp",
                        "size": "w32",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "a_sym"
                        },
                        "arg_3": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "b_sym"
                        }
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                }
            },
            "imap": [
                [
                    "a_sym",
                    "b_sym",
                    "c_sym"
                ]
            ],
            "vars": [
                "a_sym",
                "b_sym",
                "c_sym"
            ]
        }
    ],
    "Path 3": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "a5b2e291-d832-4b25-ab44-e1b71f874b86"
            },
            "predicate": "(And (Slt 0 (ReadLSB w32 0 a_sym)) (Slt 0 (ReadLSB w32 0 c_sym)))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "const": "0",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_sym"
                    }
                },
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "const": "0",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                }
            },
            "imap": [
                [
                    "a_sym",
                    "c_sym"
                ]
            ],
            "vars": [
                "a_sym",
                "c_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "6",
                "uid": "7507d5df-d978-4055-bca3-2791cade193c"
            },
            "predicate": "(Slt (Add w32 (ReadLSB w32 0 a_sym) (ReadLSB w32 0 b_sym)) (ReadLSB w32 0 c_sym))",
            "parse": {
                "action": "Slt",
                "optype": "CompareOp",
                "left": {
                    "action": "Add",
                    "optype": "BinaryArithOp",
                    "size": "w32",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_sym"
                    },
                    "arg_3": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "b_sym"
                    }
                },
                "right": {
                    "action": "ReadLSB",
                    "optype": "MacroOp",
                    "size": "w32",
                    "const": "0",
                    "var": "c_sym"
                }
            },
            "imap": [
                [
                    "a_sym",
                    "b_sym",
                    "c_sym"
                ]
            ],
            "vars": [
                "a_sym",
                "b_sym",
                "c_sym"
            ]
        }
    ],
    "Path 4": [
        {
            "treeNode": {
                "nodeId": "2",
                "uid": "a5b2e291-d832-4b25-ab44-e1b71f874b86"
            },
            "predicate": "(And (Slt 0 (ReadLSB w32 0 a_sym)) (Slt 0 (ReadLSB w32 0 c_sym)))",
            "parse": {
                "action": "And",
                "optype": "BitwiseOp",
                "left": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "const": "0",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "a_sym"
                    }
                },
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "const": "0",
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                }
            },
            "imap": [
                [
                    "a_sym",
                    "c_sym"
                ]
            ],
            "vars": [
                "a_sym",
                "c_sym"
            ]
        },
        {
            "treeNode": {
                "nodeId": "7",
                "uid": "f0d9c39e-5067-4ef4-ba6e-2ab77c12b3e2"
            },
            "predicate": "(Eq false (Slt (Add w32 (ReadLSB w32 0 a_sym) (ReadLSB w32 0 b_sym)) (ReadLSB w32 0 c_sym)))",
            "parse": {
                "action": "Eq",
                "optype": "CompareOp",
                "bool": "false",
                "right": {
                    "action": "Slt",
                    "optype": "CompareOp",
                    "left": {
                        "action": "Add",
                        "optype": "BinaryArithOp",
                        "size": "w32",
                        "right": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "a_sym"
                        },
                        "arg_3": {
                            "action": "ReadLSB",
                            "optype": "MacroOp",
                            "size": "w32",
                            "const": "0",
                            "var": "b_sym"
                        }
                    },
                    "right": {
                        "action": "ReadLSB",
                        "optype": "MacroOp",
                        "size": "w32",
                        "const": "0",
                        "var": "c_sym"
                    }
                }
            },
            "imap": [
                [
                    "a_sym",
                    "b_sym",
                    "c_sym"
                ]
            ],
            "vars": [
                "a_sym",
                "b_sym",
                "c_sym"
            ]
        }
    ]
}