// Reservoir Sampling
// n = ?
// k = ?
mdp

const int N = 6;
const int n = 2;
const int k = 1;

module main

  // S[1..n] is the sampling array
  S1: [1..N];
	S2: [1..N];

	// R[1..k] is the random sample from S
	R1: int;

	// Status of sample
	s: [0..1];

	// i is the current loop iteration/array position
	i: [(k+1)..(n+1)];

	// j is the random sample position for each i
	j: [1..n];

	[] i=2 & s=0 -> 1/2 : (j'=1) & (s'=1) + 1/2 : (j'=2) & (s'=1);
	[] i=2 & s=1 & j=1 -> (R1'=S2) & (i'=i+1) & (s'=0);
	[] i=2 & s=1 & j=2 -> (i'=i+1) & (s'=0);

	[done] i=3 -> true;
endmodule

init s=0 & i=k+1 & R1=S1 & S1!=S2  endinit
//init s=0 & i=k+1 & R1=S1 & S1=1 & S2=2 & S3=3 & S4=4 & S5=5 & S6=6 & S7=7 & S8=8 & S9=9 & S0=10 endinit
label "prop" = i=3 & (R1=S1);
